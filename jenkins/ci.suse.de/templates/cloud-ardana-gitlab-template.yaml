- job-template:
    name: 'cloud-ardana{version}-gitlab-{model}'
    project-type: multijob
    node: cloud-ardana-ci
    concurrent: true
    workspace: "openstack-ardana-gitlab-$BUILD_ID"
    wrappers:
      - timestamps
      - build-name:
          name: '#$BUILD_NUMBER: $JOB_NAME (${{gitlabTargetRepoName}}/${{gitlabMergeRequestIid}})'

      - timeout:
          timeout: 300
          type: no-activity
          abort: true
          write-description: "Job aborted due to 300 minutes of inactivity"

    logrotate:
      numToKeep: 2000
      daysToKeep: 300

    properties:
       - gitlab:
           connection: "https://gitlab.suse.de"

    parameters:
      - string:
          name: git_automation_repo
          default: https://github.com/stefannica/automation.git
          description: >-
            The git automation repository to use

      - string:
          name: git_automation_branch
          default: gitlab-builder
          description: >-
            The git automation branch

      - string:
          name: git_input_model_repo
          default: git://git.suse.provo.cloud/ardana/ardana-input-model
          description: >-
            The git repository to use for input models

      - string:
          name: git_input_model_branch
          default: master
          description: >-
            The git repository branch to use for input models

      - string:
          name: git_input_model_path
          default: 2.0/ardana-ci
          description: >-
            Relative path in the input model git repository where the input models are located

      - string:
          name: model
          default: "{model}"
          description: >-
            The Input Model to use from the input model git repository / branch / path

      - string:
          name: job_name
          default: ''
          description: >-
            This name reserves job environment and prevents deletion at the end.

      - choice:
          name: cloudsource
          choices:
            - stagingcloud{version}
            - develcloud{version}
            - GM{version}
          description: >-
            The cloud repository (from provo-clouddata) to be used for testing.
            This value can take the following form:

               stagingcloud<X> (Devel:Cloud:X:Staging)
               develcloud<X> (Devel:Cloud:X)
               GM<X> (official GM)

      - extended-choice:
          name: repositories
          type: multi-select
          value: SLES-Pool,SLES-Updates,SLES-Updates-test,Cloud-Pool,Cloud-Updates,Cloud-Updates-test
          visible-items: 6
          multi-select-delimiter: ','
          default-value: SLES-Pool,SLES-Updates
          description: >-
            Set of zypper repositories (from provo-clouddata) to be configured during installation
            in addition to that indicated by the cloudsource parameter.

      - choice:
          name: update_cloudsource
          choices:
            -
            - stagingcloud{version}
            - develcloud{version}
            - GM{version}
          description: >-
            The cloud media (from provo-clouddata) to be used for update testing. Use a value different than
            cloudsource to enable update testing.

      - extended-choice:
          name: update_repositories
          type: multi-select
          value: SLES-Pool,SLES-Updates,SLES-Updates-test,Cloud-Pool,Cloud-Updates,Cloud-Updates-test
          visible-items: 6
          multi-select-delimiter: ','
          default-value: ''
          description: >-
            Set of repositories to be added after the initial installation and used
            during update testing. Select one or more repositories to enable update testing.

      - choice:
          name: update_method
          choices:
            - update
            - patch
            - dist-upgrade
          description: >-
            The update method used for update testing.

      - string:
          name: tempest_run_filter
          default: "{tempest_run_filter}"
          description: >-
            Name of the filter file to use for tempest. Possible values:
            ci, compute, designate, lbaas, network, neutron-api, periodic,
            periodic-virtual, refstack, smoke, swift, tests2skip, tests-ci,
            upgrade-ci or upgrade

      - string:
          name: build_pool_name
          default: "{build_pool_name}"
          description: >-
            Name of the build resource pool to be used for this job. When
            supplied, the heat stack created by this job will be added to the
            build pool and will be cleaned up automatically when the pool fills up.

      - string:
          name: build_pool_size
          default: "{build_pool_size}"
          description: >-
            The maximum number of heat stacks in the build_pool_name build pool
            that can be kept running at any given time. When this number is exceeded,
            older stacks in the pool will be deleted to make place for new ones.

      - string:
          name: develproject
          default: "{develproject}"
          description: >-
            Project in IBS to link against when creating a test project for a
            change proposal.

      - string:
          name: homeproject
          default: 'home:opensuseapibmw'
          description: >-
            Project in IBS that will act as the parent project for the newly
            generated test project.

      - string:
          name: repository
          default: "{repository}"
          description: >-
            Name of the repository in IBS against which to build the test packages.

    # NOTE: this is needed only to support the GitLab trigger's ability to detect
    # if a previous build has been previously used to test the same code changes
    # and to avoid retriggering builds when there's no code change since the last
    # build (see https://github.com/jenkinsci/gitlab-plugin/issues/361)
    scm:
       - git:
           url: "gitlab@gitlab.suse.de:ArdanaDev/${{gitlabTargetRepoName}}.git"
           refspec: "+refs/heads/*:refs/remotes/origin/* +refs/merge-requests/*/head:refs/remotes/origin/merge-requests/*"
           branches:
             - "origin/${{gitlabSourceBranch}}"

    triggers:
       - gitlab:
           trigger-push: false
           trigger-merge-request: true
           trigger-open-merge-request-push: source
           trigger-note: true
           note-regex: "^recheck$"
           cancel-builds-on-update: true
           allow-all-branches: false
           branch-filter-type: NameBasedFilter
           include-branches:
             - "{git_branch}"

    builders:
#      - system-groovy:
#          command: |
#            // this script aborts jobs already pending or running for the same GitLab merge requests
#
#            import hudson.model.Result
#            import jenkins.model.CauseOfInterruption
#
#            def env = build.getEnvironment()
#            def repo_name= env.get('gitlabTargetRepoName')
#            def mr_id= env.get('gitlabMergeRequestIid')
#
#            //iterate through current project runs
#            build.getProject()._getRuns().each{{ run->
#              def exec = run.getExecutor()
#              def run_env = run.getEnvironment()
#              def run_repo_name = run_env.get('gitlabTargetRepoName')
#              def run_mr_id = run_env.get('gitlabMergeRequestIid')
#
#              //if the run is not a current build and it has executor (running) then abort it
#              if(run!=build && exec!=null && repo_name==run_repo_name && mr_id==run_mr_id){{
#                //prepare the cause of interruption
#                def cause = new CauseOfInterruption(){{
#                  public String getShortDescription(){{
#                    return "interrupted by build #${{build.getId()}}"
#                  }}
#                }}
#                exec.interrupt(Result.ABORTED, cause)
#              }}
#            }}

      - multijob:
          name: 'Test Ardana Deployment'
          condition: SUCCESSFUL
          projects:
            - name: openstack-ardana
              current-parameters: true

    publishers:
      - gitlab-notifier:
           name: jenkins
           mark-unstable-as-success: false
      - workspace-cleanup:
          clean-if:
            - failure: false
            - aborted: false
            - unstable: false
            - success: true
