- job:
    name: openstack-ardana-heat
    description: |
      Ardana heat stack management (create/delete/suspend stacks, clean up old stacks)
    concurrent: false
    # the selected node needs the cloud credentials
    node: cloud-ardana-ci
    wrappers:
      - timestamps

      - timeout:
          timeout: 30
          type: no-activity
          abort: true
          write-description: "Job aborted due to 30 minutes of inactivity"

    logrotate:
      numToKeep: 200
      daysToKeep: 30

    parameters:
      - choice:
          name: action
          choices:
            - create
            - update
            - delete
          description: >-
            The action to be performed.
            The label parameter value must be supplied if the delete or update action.
            If the create or update action is selected, the heat_template_file parameter
            value must also be supplied.

      - string:
          name: label
          default: ''
          description: >-
            This label uniquely identifies the virtual environment.

      - string:
          name: heat_template_file
          default: ''
          description: >-
            The heat orchestration template file describing the stack that must
            be instantiated or updated.

      - string:
          name: cloud_config
          default: 'engcloud-cloud-ci'
          description: >-
            The name of the OpenStack cloud configuration used for the OpenStack client.

    builders:
      - shell: |
          if [ -n "$label ]; then
            heat_stack_name="$JOB_NAME-$label"
          else
            heat_stack_name="$JOB_NAME-$BUILD_NUMBER"
          fi

          delete_heat_stack() {
              stack_name=$1
              delete_rc=0

              # Resume stack before deletion, otherwise deleting it results in failure
              openstack --os-cloud ${cloud_config} stack delete --wait $stack_name && rc=$? || rc=$?
              if [[ $rc != 0 ]]; then
                  # Attempt a brute force type of cleanup (delete servers and volumes)
                  openstack --os-cloud ${cloud_config} stack resource list --filter type=OS::Nova::Server \
                    -f value -c physical_resource_id $stack_name |
                    awk '{print "openstack --os-cloud '${cloud_config}' server delete --wait "$1 }' | sh -x || :
                  openstack --os-cloud ${cloud_config} stack resource list --filter type=OS::Cinder::Volume \
                    -f value -c physical_resource_id $stack_name |
                    awk '{print "openstack --os-cloud '${cloud_config}' volume delete "$1 }' | sh -x || :
                  openstack --os-cloud ${cloud_config} stack delete --wait $stack_name && rc=$? || rc=$?
                  if [[ $rc != 0 ]]; then
                      # Usually, retrying after a short break works
                      sleep 20
                      openstack --os-cloud ${cloud_config} stack delete --wait $stack_name && rc=$? || rc=$?
                      delete_rc=$rc
                  fi
              fi

              return $delete_rc
          }

          get_heat_stack() {
              stack_name=$1
              openstack --os-cloud ${cloud_config} stack list \
                        -f value -c 'Stack Name' \
                        grep "^$stack_name$" || :
          }

          if [[ $action == "create" ]]; then
              heat_stack=$(get_heat_stack $heat_stack_name)
              if [[ -n $heat_stack ]]; then
                  delete_heat_stack $heat_stack_name
              fi
              exit_rc=0
              openstack --os-cloud ${cloud_config} stack create --timeout 10 --wait \
                  -t "$heat_template_file"  \
                  $heat_stack_name && rc=$? || rc=$?
              if [[ $rc != 0 ]]; then
                  exit_rc=$rc
                  delete_heat_stack $heat_stack_name || :
                  exit $exit_rc
              fi
          elif [[ $action == "update" ]]; then
              openstack --os-cloud ${cloud_config} stack update --timeout 10 --wait \
                  -t "$heat_template_file"  \
                  $heat_stack_name
          elif [[ $action == "delete" ]]; then
              delete_heat_stack $heat_stack_name
          fi

    publishers:
      - workspace-cleanup:
          clean-if:
            - failure: false
            - aborted: false
            - unstable: false
