#
# (c) Copyright 2018 SUSE LLC
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
---

- name: Copy input model
  copy:
    src: "{{ input_model_path }}/"
    dest: "~/openstack/my_cloud/definition"
  register: input_model

- name: Copy RHEL repo playbooks when RHEL compute
  copy:
    src: "enable-centos-rpms-on-rhel/"
    dest: "{{ ardana_openstack_path }}/"
  when: rhel_enabled

- name: Configure ardana-extensions-ses when SES enabled
  lineinfile:
    path: "~/openstack/my_cloud/config/ses/settings.yml"
    regexp: "^ses_config_path:"
    line: "ses_config_path: /tmp/ses_config"
    insertbefore: "^ses_config_file:"
  register: ses_config
  when: ses_enabled

- name: Enable ceph backend for glance when SES enabled
  replace:
    dest: "~/openstack/my_cloud/definition/data/control_plane.yml"
    regexp: "(?<=-\\sglance-api)$"
    replace: ":\n                glance_default_store: 'rbd'"
  register: ses_config
  when: ses_enabled

- name: Change VRRP offset
  replace:
    path: "~/openstack/ardana/ansible/roles/keepalived/defaults/main.yml"
    regexp: "keepalived_vrrp_offset: 0"
    replace: "keepalived_vrrp_offset: {{ vrrp_offset }}"
  register: vrrp

# TODO: Temporary fix for reimaging RHEL nodes
- name: Fix prepare-rhel-grub2.yml - REMOVE WHEN bsc#1101713 fixed
  replace:
    path: "/var/lib/ardana/openstack/ardana/ansible/roles/cobbler/tasks/create-rhel-grub2.yml"
    regexp: 'replace\(\":\", \"-\"\)'
    replace: "lower"
    backup: yes

- name: Fix for prepare-[sles|rhel]-grub2.yml - part 1 - REMOVE WHEN bsc#1101865 fixed
  lineinfile:
    path: "/var/lib/ardana/openstack/ardana/ansible/roles/cobbler/tasks/create-{{ item }}-grub2.yml"
    regexp: '^- set_fact.*|.*_node_uefi.*'
    backup: yes
    state: absent
  loop:
    - sles
    - rhel

- name: Fix for prepare-[sles|rhel]-grub2.yml - part 2 - REMOVE WHEN bsc#1101865 fixed
  replace:
    path: "/var/lib/ardana/openstack/ardana/ansible/roles/cobbler/tasks/create-{{ item }}-grub2.yml"
    regexp: 'item\[0\]'
    replace: "item.stdout"
    backup: yes
  loop:
    - sles
    - rhel

- name: Fix for prepare-[sles|rhel]-grub2.yml - part 3 - REMOVE WHEN bsc#1101865 fixed
  replace:
    path: "/var/lib/ardana/openstack/ardana/ansible/roles/cobbler/tasks/create-{{ item }}-grub2.yml"
    regexp: '_together\:'
    replace: '_items: "{% raw %}{{ node_mac.results }}{% endraw %}"'
    backup: yes
  loop:
    - sles
    - rhel

- name: Fix for prepare-[sles|rhel]-grub2.yml - part 4 - REMOVE WHEN bsc#1101865 fixed
  replace:
    path: "/var/lib/ardana/openstack/ardana/ansible/roles/cobbler/templates/{{ item.0 }}.j2"
    regexp: "{{ item.1.regex }}"
    replace: "{{ item.1.replace }}"
    backup: yes
  loop: "{{ ['sles.grub2', 'grub2'] | product([{'regex': '\\[0\\]', 'replace': '.stdout'}, {'regex': '\\[1\\]', 'replace': '.item'}]) | list }}"

- name: Commit changes
  shell: "git add -A && git commit -m 'Input model {{ ardana_input_model }} for {{ qe_env }}'"
  args:
    chdir: "{{ ardana_openstack_path }}"
  when: input_model.changed or vrrp.changed or ses_config.changed

- name: Run playbooks from "{{ ardana_openstack_path }}"
  command: "ansible-playbook -i hosts/localhost {{ item }}"
  args:
    chdir: "{{ ardana_openstack_path }}"
  with_items: "{{ ardana_openstack_playbooks }}"
  register: ansible_openstack_plays
  when: not (ansible_openstack_plays | default({})) is failed

- name: Get list of SLES BM nodes to reimage
  shell: 'cobbler profile list | grep "sles12sp3-x86_64-" | cut -d"-" -f3'
  become: yes
  register: ardana_sles_nodes

- name: Get list of RHEL BM nodes to reimage
  shell: 'cobbler profile list | grep "rhel73-x86_64-" | cut -d"-" -f3'
  become: yes
  register: ardana_rhel_nodes

- name: Run playbook to prepare SLES grub2
  command: "ansible-playbook -i hosts/localhost prepare-sles-grub2.yml \
    -e nodelist={{ ardana_sles_nodes.stdout_lines | join(',') }}"
  args:
    chdir: "{{ ardana_openstack_path }}"

- name: Run playbook to prepare RHEL grub2
  command: "ansible-playbook -i hosts/localhost prepare-rhel-grub2.yml \
    -e nodelist={{ ardana_rhel_nodes.stdout_lines | join(',') }}"
  args:
    chdir: "{{ ardana_openstack_path }}"
  when: ardana_rhel_nodes.stdout_lines | length

- name: Run playbook to reimage BM nodes
  command: "ansible-playbook -i hosts/localhost bm-reimage.yml \
    -e nodelist={{ (ardana_sles_nodes.stdout_lines + \
    ardana_rhel_nodes.stdout_lines) | join(',') }}"
  args:
    chdir: "{{ ardana_openstack_path }}"

- name: Run playbooks to enable RHEL repo on deployer when RHEL compute
  command: "ansible-playbook -i hosts/localhost {{ item }}"
  args:
    chdir: "{{ ardana_openstack_path }}"
  with_items: "{{ ardana_openstack_rhel_repo_playbooks }}"
  register: ansible_openstack_rhel_plays
  when:
    - not (ansible_openstack_rhel_plays | default({})) is failed
    - rhel_enabled

- name: Import Devel:Cloud:8 key when source is devel[-staging]
  command: "ansible {{ item }} resources"
  args:
    chdir: "{{ ardana_scratch_path }}"
  with_items:
    - "-m copy -a 'src=/srv/www/suse-12.3/x86_64/repos/Cloud/content.key dest=/tmp/'"
    - "-b -a 'rpm --import /tmp/content.key'"
  when: "'devel' in cloud_source"

- name: Drop maintenance update playbook when MU available
  template:
    src: "maint_updates.yml.j2"
    dest: "{{ ardana_scratch_path }}/_maint_updates.yml"
  when: cloud_maint_updates_list | length or sles_maint_updates_list | length

- name: Run maintenance update playbook when MU available
  command: "ansible-playbook _maint_updates.yml"
  args:
    chdir: "{{ ardana_scratch_path }}"
  when: cloud_maint_updates_list | length or sles_maint_updates_list | length

- name: Run playbooks from "{{ ardana_scratch_path }}"
  command: "ansible-playbook -i hosts/verb_hosts {{ item }}"
  args:
    chdir: "{{ ardana_scratch_path }}"
  with_items: "{{ ardana_scratch_playbooks }}"
  register: ansible_scratch_plays
  when: not (ansible_scratch_plays | default({})) is failed
