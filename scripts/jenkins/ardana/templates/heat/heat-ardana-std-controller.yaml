heat_template_version: 2016-10-14

description: >
  Template for deploying Ardana in a multinode setup

parameters:
  key_name:
    type: string
    label: Key Name
    description: Name of key-pair to be used for compute instance
    default: engcloud-cloud-ci
  image_id:
    type: string
    label: Image ID
    description: Image to be used for compute instance
    default: cleanvm-jeos-SLE12SP3
  instance_type:
    type: string
    label: Instance Type
    description: Type of instance (flavor) to be used for the compute instance
    default: cloud-ardana-job-compute

resources:

{% set ns = namespace(disk_model=null, interface_model=null) %}
{% for server_role in input_model['server-roles'] if server_role.name == server['server-role'] %}
{%   for disk_model in input_model['disk-models'] if disk_model.name == server_role['disk-model'] %}
{%     set ns.disk_model = disk_model  %}
{%   endfor }
{%   for interface_model in input_model['interface-models'] if interface_model.name == server_role['interface-model'] %}
{%     set ns.interface_model = interface_model  %}
{%   endfor }
{% endfor }

  server:
    type: OS::Nova::Server
    properties:
      name: {{ server.name }}
      key_name: { get_param: key_name }
      image: { get_param: image_id }
      flavor: { get_param: instance_type_controller }
      networks: { get_param: networks }

  deployer_mgmt_port:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: network_mgmt }
      fixed_ips:
        - subnet_id: { get_resource: subnet_mgmt }


{% set disk_model = ns.disk_model  %}

  # disks
  controller_vdb:
    type: OS::Cinder::Volume
    properties:
      size: 30
  controller_vdc:
    type: OS::Cinder::Volume
    properties:
      size: 30
  controller_vdd:
    type: OS::Cinder::Volume
    properties:
      size: 30
  controller_vde:
    type: OS::Cinder::Volume
    properties:
      size: 30
  controller_vdf:
    type: OS::Cinder::Volume
    properties:
      size: 30


  controller_vol_att_vdb:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: controller }
      volume_id: { get_resource: controller_vdb }
      mountpoint: /dev/vdb
  controller_vol_att_vdc:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: controller }
      volume_id: { get_resource: controller_vdc }
      mountpoint: /dev/vdc
  controller_vol_att_vdd:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: controller }
      volume_id: { get_resource: controller_vdd }
      mountpoint: /dev/vdd
  controller_vol_att_vde:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: controller }
      volume_id: { get_resource: controller_vde }
      mountpoint: /dev/vde
  controller_vol_att_vdf:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: controller }
      volume_id: { get_resource: controller_vdf }
      mountpoint: /dev/vdf

outputs:
  # networks
  networks:
    description: networks
    value: { get_attr: [ controller, networks] }
  # addresses
  addresses:
    description: addresses
    value: { get_attr: [ controller, addresses] }
